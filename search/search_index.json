{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Overview"},{"location":"#overview","text":"For full documentation visit mkdocs.org .","title":"Overview"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"src/GenricClass/","text":"MyClass Print print print! Source code in src/GenricClass.py class MyClass : \"\"\"Print print print!\"\"\" def method_a ( self ): \"\"\"Print A!\"\"\" print ( \"A!\" ) def method_b ( self ): \"\"\"Print B!\"\"\" print ( \"B!\" ) def method_c ( self ): \"\"\"Print C!\"\"\" print ( \"C!\" ) method_a ( self ) Print A! Source code in src/GenricClass.py def method_a ( self ): \"\"\"Print A!\"\"\" print ( \"A!\" ) method_b ( self ) Print B! Source code in src/GenricClass.py def method_b ( self ): \"\"\"Print B!\"\"\" print ( \"B!\" ) method_c ( self ) Print C! Source code in src/GenricClass.py def method_c ( self ): \"\"\"Print C!\"\"\" print ( \"C!\" )","title":"GenricClass"},{"location":"src/GenricClass/#src.GenricClass.MyClass","text":"Print print print! Source code in src/GenricClass.py class MyClass : \"\"\"Print print print!\"\"\" def method_a ( self ): \"\"\"Print A!\"\"\" print ( \"A!\" ) def method_b ( self ): \"\"\"Print B!\"\"\" print ( \"B!\" ) def method_c ( self ): \"\"\"Print C!\"\"\" print ( \"C!\" )","title":"MyClass"},{"location":"src/GenricClass/#src.GenricClass.MyClass.method_a","text":"Print A! Source code in src/GenricClass.py def method_a ( self ): \"\"\"Print A!\"\"\" print ( \"A!\" )","title":"method_a()"},{"location":"src/GenricClass/#src.GenricClass.MyClass.method_b","text":"Print B! Source code in src/GenricClass.py def method_b ( self ): \"\"\"Print B!\"\"\" print ( \"B!\" )","title":"method_b()"},{"location":"src/GenricClass/#src.GenricClass.MyClass.method_c","text":"Print C! Source code in src/GenricClass.py def method_c ( self ): \"\"\"Print C!\"\"\" print ( \"C!\" )","title":"method_c()"},{"location":"src/main/","text":"This module contains the main function. transpose ( matrix = None ) Transpose a matrix. Parameters: Name Type Description Default matrix List description . Defaults to None. None Returns: Type Description List description Source code in src/main.py def transpose ( matrix : List = None ) -> List : \"\"\" Transpose a matrix. Args: matrix (List, optional): _description_. Defaults to None. Returns: List: _description_ \"\"\" return [[ row [ i ] for row in matrix ] for i in range ( len ( matrix [ 0 ]))]","title":"Main"},{"location":"src/main/#src.main.transpose","text":"Transpose a matrix. Parameters: Name Type Description Default matrix List description . Defaults to None. None Returns: Type Description List description Source code in src/main.py def transpose ( matrix : List = None ) -> List : \"\"\" Transpose a matrix. Args: matrix (List, optional): _description_. Defaults to None. Returns: List: _description_ \"\"\" return [[ row [ i ] for row in matrix ] for i in range ( len ( matrix [ 0 ]))]","title":"transpose()"},{"location":"src/inner/test2/","text":"","title":"Test2"}]}